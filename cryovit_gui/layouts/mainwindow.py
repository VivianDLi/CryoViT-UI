# Form implementation generated from reading ui file 'qt_project/mainwindow.ui'
#
# Created by: PyQt6 UI code generator 6.9.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 1200)
        MainWindow.setMinimumSize(QtCore.QSize(400, 600))
        MainWindow.setStyleSheet("background-color: rgb(235, 235, 235);\n"
"color: rgb(20, 20, 20);")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SizeConstraint.SetDefaultConstraint)
        self.verticalLayout.setContentsMargins(9, 5, 9, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.modeTabs = QtWidgets.QTabWidget(parent=self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.modeTabs.setFont(font)
        self.modeTabs.setTabBarAutoHide(False)
        self.modeTabs.setObjectName("modeTabs")
        self.processTab = QtWidgets.QWidget()
        self.processTab.setObjectName("processTab")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.processTab)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.processView = QtWidgets.QTreeView(parent=self.processTab)
        self.processView.setObjectName("processView")
        self.verticalLayout_6.addWidget(self.processView)
        self.processButton = QtWidgets.QPushButton(parent=self.processTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.processButton.sizePolicy().hasHeightForWidth())
        self.processButton.setSizePolicy(sizePolicy)
        self.processButton.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.processButton.setFont(font)
        self.processButton.setObjectName("processButton")
        self.verticalLayout_6.addWidget(self.processButton)
        self.modeTabs.addTab(self.processTab, "")
        self.annotTab = QtWidgets.QWidget()
        self.annotTab.setObjectName("annotTab")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.annotTab)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.directoryFrame = QtWidgets.QFrame(parent=self.annotTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.directoryFrame.sizePolicy().hasHeightForWidth())
        self.directoryFrame.setSizePolicy(sizePolicy)
        self.directoryFrame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.directoryFrame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.directoryFrame.setObjectName("directoryFrame")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.directoryFrame)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.projectDirectoryLabel = QtWidgets.QLabel(parent=self.directoryFrame)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.projectDirectoryLabel.setFont(font)
        self.projectDirectoryLabel.setObjectName("projectDirectoryLabel")
        self.horizontalLayout_2.addWidget(self.projectDirectoryLabel)
        self.projectDirectory = QtWidgets.QLineEdit(parent=self.directoryFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.projectDirectory.sizePolicy().hasHeightForWidth())
        self.projectDirectory.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.projectDirectory.setFont(font)
        self.projectDirectory.setObjectName("projectDirectory")
        self.horizontalLayout_2.addWidget(self.projectDirectory)
        self.directoryButton = QtWidgets.QToolButton(parent=self.directoryFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.directoryButton.sizePolicy().hasHeightForWidth())
        self.directoryButton.setSizePolicy(sizePolicy)
        self.directoryButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/open_folder.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.directoryButton.setIcon(icon)
        self.directoryButton.setObjectName("directoryButton")
        self.horizontalLayout_2.addWidget(self.directoryButton)
        self.verticalLayout_5.addWidget(self.directoryFrame)
        self.annotGroup = QtWidgets.QGroupBox(parent=self.annotTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.annotGroup.sizePolicy().hasHeightForWidth())
        self.annotGroup.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.annotGroup.setFont(font)
        self.annotGroup.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignTop)
        self.annotGroup.setObjectName("annotGroup")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.annotGroup)
        self.verticalLayout_9.setContentsMargins(-1, 11, -1, 11)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.syncIcon = QtWidgets.QLabel(parent=self.annotGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.syncIcon.sizePolicy().hasHeightForWidth())
        self.syncIcon.setSizePolicy(sizePolicy)
        self.syncIcon.setMinimumSize(QtCore.QSize(20, 20))
        self.syncIcon.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.syncIcon.setText("")
        self.syncIcon.setTextFormat(QtCore.Qt.TextFormat.PlainText)
        self.syncIcon.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.syncIcon.setObjectName("syncIcon")
        self.verticalLayout_9.addWidget(self.syncIcon)
        self.selectLabel = QtWidgets.QLabel(parent=self.annotGroup)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.selectLabel.setFont(font)
        self.selectLabel.setObjectName("selectLabel")
        self.verticalLayout_9.addWidget(self.selectLabel)
        self.sampleView = QtWidgets.QTableView(parent=self.annotGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sampleView.sizePolicy().hasHeightForWidth())
        self.sampleView.setSizePolicy(sizePolicy)
        self.sampleView.setObjectName("sampleView")
        self.verticalLayout_9.addWidget(self.sampleView)
        self.frame = QtWidgets.QFrame(parent=self.annotGroup)
        self.frame.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.frame.setObjectName("frame")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.selectAllButton = QtWidgets.QPushButton(parent=self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.selectAllButton.sizePolicy().hasHeightForWidth())
        self.selectAllButton.setSizePolicy(sizePolicy)
        self.selectAllButton.setMaximumSize(QtCore.QSize(16777215, 50))
        self.selectAllButton.setObjectName("selectAllButton")
        self.horizontalLayout_3.addWidget(self.selectAllButton)
        self.deselectAllButton = QtWidgets.QPushButton(parent=self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deselectAllButton.sizePolicy().hasHeightForWidth())
        self.deselectAllButton.setSizePolicy(sizePolicy)
        self.deselectAllButton.setMaximumSize(QtCore.QSize(16777215, 50))
        self.deselectAllButton.setObjectName("deselectAllButton")
        self.horizontalLayout_3.addWidget(self.deselectAllButton)
        self.resetDefaultButton = QtWidgets.QPushButton(parent=self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.resetDefaultButton.sizePolicy().hasHeightForWidth())
        self.resetDefaultButton.setSizePolicy(sizePolicy)
        self.resetDefaultButton.setMaximumSize(QtCore.QSize(16777215, 50))
        self.resetDefaultButton.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.resetDefaultButton.setObjectName("resetDefaultButton")
        self.horizontalLayout_3.addWidget(self.resetDefaultButton)
        self.verticalLayout_9.addWidget(self.frame)
        self.fileView = QtWidgets.QTableView(parent=self.annotGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fileView.sizePolicy().hasHeightForWidth())
        self.fileView.setSizePolicy(sizePolicy)
        self.fileView.setMinimumSize(QtCore.QSize(0, 0))
        self.fileView.setObjectName("fileView")
        self.verticalLayout_9.addWidget(self.fileView)
        self.frame_2 = QtWidgets.QFrame(parent=self.annotGroup)
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.chimeraButton = QtWidgets.QPushButton(parent=self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.chimeraButton.sizePolicy().hasHeightForWidth())
        self.chimeraButton.setSizePolicy(sizePolicy)
        self.chimeraButton.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.chimeraButton.setFont(font)
        self.chimeraButton.setObjectName("chimeraButton")
        self.horizontalLayout.addWidget(self.chimeraButton)
        self.slicesButton = QtWidgets.QPushButton(parent=self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.slicesButton.sizePolicy().hasHeightForWidth())
        self.slicesButton.setSizePolicy(sizePolicy)
        self.slicesButton.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.slicesButton.setFont(font)
        self.slicesButton.setObjectName("slicesButton")
        self.horizontalLayout.addWidget(self.slicesButton)
        self.verticalLayout_9.addWidget(self.frame_2)
        self.line = QtWidgets.QFrame(parent=self.annotGroup)
        self.line.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_9.addWidget(self.line)
        self.frame_3 = QtWidgets.QFrame(parent=self.annotGroup)
        self.frame_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.featuresLabel = QtWidgets.QLabel(parent=self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.featuresLabel.sizePolicy().hasHeightForWidth())
        self.featuresLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.featuresLabel.setFont(font)
        self.featuresLabel.setObjectName("featuresLabel")
        self.horizontalLayout_4.addWidget(self.featuresLabel)
        self.featuresDisplay = QtWidgets.QLineEdit(parent=self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.featuresDisplay.sizePolicy().hasHeightForWidth())
        self.featuresDisplay.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.featuresDisplay.setFont(font)
        self.featuresDisplay.setObjectName("featuresDisplay")
        self.horizontalLayout_4.addWidget(self.featuresDisplay)
        self.featuresButton = QtWidgets.QToolButton(parent=self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.featuresButton.sizePolicy().hasHeightForWidth())
        self.featuresButton.setSizePolicy(sizePolicy)
        self.featuresButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/file.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.featuresButton.setIcon(icon1)
        self.featuresButton.setObjectName("featuresButton")
        self.horizontalLayout_4.addWidget(self.featuresButton)
        self.verticalLayout_9.addWidget(self.frame_3)
        self.annotButton = QtWidgets.QPushButton(parent=self.annotGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.annotButton.sizePolicy().hasHeightForWidth())
        self.annotButton.setSizePolicy(sizePolicy)
        self.annotButton.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.annotButton.setFont(font)
        self.annotButton.setObjectName("annotButton")
        self.verticalLayout_9.addWidget(self.annotButton)
        self.verticalLayout_5.addWidget(self.annotGroup)
        self.splitsGroup = QtWidgets.QGroupBox(parent=self.annotTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitsGroup.sizePolicy().hasHeightForWidth())
        self.splitsGroup.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.splitsGroup.setFont(font)
        self.splitsGroup.setObjectName("splitsGroup")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.splitsGroup)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.splitsButton = QtWidgets.QPushButton(parent=self.splitsGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitsButton.sizePolicy().hasHeightForWidth())
        self.splitsButton.setSizePolicy(sizePolicy)
        self.splitsButton.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.splitsButton.setFont(font)
        self.splitsButton.setObjectName("splitsButton")
        self.verticalLayout_8.addWidget(self.splitsButton)
        self.verticalLayout_5.addWidget(self.splitsGroup)
        self.modeTabs.addTab(self.annotTab, "")
        self.trainTab = QtWidgets.QWidget()
        self.trainTab.setObjectName("trainTab")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.trainTab)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.trainView = QtWidgets.QTreeView(parent=self.trainTab)
        self.trainView.setObjectName("trainView")
        self.verticalLayout_2.addWidget(self.trainView)
        self.trainButton = QtWidgets.QPushButton(parent=self.trainTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.trainButton.sizePolicy().hasHeightForWidth())
        self.trainButton.setSizePolicy(sizePolicy)
        self.trainButton.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.trainButton.setFont(font)
        self.trainButton.setObjectName("trainButton")
        self.verticalLayout_2.addWidget(self.trainButton)
        self.modeTabs.addTab(self.trainTab, "")
        self.evalTab = QtWidgets.QWidget()
        self.evalTab.setObjectName("evalTab")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.evalTab)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.evalView = QtWidgets.QTreeView(parent=self.evalTab)
        self.evalView.setObjectName("evalView")
        self.verticalLayout_4.addWidget(self.evalView)
        self.evalButton = QtWidgets.QPushButton(parent=self.evalTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.evalButton.sizePolicy().hasHeightForWidth())
        self.evalButton.setSizePolicy(sizePolicy)
        self.evalButton.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.evalButton.setFont(font)
        self.evalButton.setObjectName("evalButton")
        self.verticalLayout_4.addWidget(self.evalButton)
        self.modeTabs.addTab(self.evalTab, "")
        self.segmentTab = QtWidgets.QWidget()
        self.segmentTab.setObjectName("segmentTab")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.segmentTab)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.segmentView = QtWidgets.QTreeView(parent=self.segmentTab)
        self.segmentView.setObjectName("segmentView")
        self.verticalLayout_7.addWidget(self.segmentView)
        self.segmentButton = QtWidgets.QPushButton(parent=self.segmentTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.segmentButton.sizePolicy().hasHeightForWidth())
        self.segmentButton.setSizePolicy(sizePolicy)
        self.segmentButton.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.segmentButton.setFont(font)
        self.segmentButton.setObjectName("segmentButton")
        self.verticalLayout_7.addWidget(self.segmentButton)
        self.modeTabs.addTab(self.segmentTab, "")
        self.verticalLayout.addWidget(self.modeTabs)
        spacerItem1 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Preferred)
        self.verticalLayout.addItem(spacerItem1)
        self.consoleBox = QtWidgets.QGroupBox(parent=self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.consoleBox.sizePolicy().hasHeightForWidth())
        self.consoleBox.setSizePolicy(sizePolicy)
        self.consoleBox.setMaximumSize(QtCore.QSize(16777215, 200))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.consoleBox.setFont(font)
        self.consoleBox.setFocusPolicy(QtCore.Qt.FocusPolicy.ClickFocus)
        self.consoleBox.setObjectName("consoleBox")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.consoleBox)
        self.verticalLayout_3.setContentsMargins(5, 5, 5, 5)
        self.verticalLayout_3.setSpacing(1)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.consoleText = QtWidgets.QTextBrowser(parent=self.consoleBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.consoleText.sizePolicy().hasHeightForWidth())
        self.consoleText.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        self.consoleText.setFont(font)
        self.consoleText.setAcceptDrops(False)
        self.consoleText.setStyleSheet("background-color: rgb(90, 90, 90);\n"
"color: rgb(255, 255, 255);\n"
"border-color: rgb(90, 90, 90);\n"
"font: 10pt \"Segoe UI\";")
        self.consoleText.setFrameShape(QtWidgets.QFrame.Shape.WinPanel)
        self.consoleText.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.consoleText.setDocumentTitle("")
        self.consoleText.setReadOnly(True)
        self.consoleText.setAcceptRichText(True)
        self.consoleText.setObjectName("consoleText")
        self.verticalLayout_3.addWidget(self.consoleText)
        self.verticalLayout.addWidget(self.consoleBox)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 25))
        self.menubar.setAutoFillBackground(False)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(parent=self.menubar)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(235, 235, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(235, 235, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(235, 235, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20, 128))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(235, 235, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(235, 235, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(235, 235, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20, 128))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(235, 235, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(235, 235, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(235, 235, 235))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 20, 20, 128))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.PlaceholderText, brush)
        self.menuFile.setPalette(palette)
        self.menuFile.setObjectName("menuFile")
        self.menuHelp = QtWidgets.QMenu(parent=self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuTools = QtWidgets.QMenu(parent=self.menubar)
        self.menuTools.setObjectName("menuTools")
        MainWindow.setMenuBar(self.menubar)
        self.actionSettings = QtGui.QAction(parent=MainWindow)
        self.actionSettings.setCheckable(False)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/settings.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionSettings.setIcon(icon2)
        self.actionSettings.setObjectName("actionSettings")
        self.actionGithub = QtGui.QAction(parent=MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/github.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionGithub.setIcon(icon3)
        self.actionGithub.setObjectName("actionGithub")
        self.actionSave_Preset = QtGui.QAction(parent=MainWindow)
        self.actionSave_Preset.setObjectName("actionSave_Preset")
        self.actiondefault = QtGui.QAction(parent=MainWindow)
        self.actiondefault.setObjectName("actiondefault")
        self.action = QtGui.QAction(parent=MainWindow)
        self.action.setObjectName("action")
        self.actionSaveAs_Preset = QtGui.QAction(parent=MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/save.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionSaveAs_Preset.setIcon(icon4)
        self.actionSaveAs_Preset.setObjectName("actionSaveAs_Preset")
        self.actionLoad_Preset = QtGui.QAction(parent=MainWindow)
        self.actionLoad_Preset.setIcon(icon1)
        self.actionLoad_Preset.setObjectName("actionLoad_Preset")
        self.actionDirectory_Setup = QtGui.QAction(parent=MainWindow)
        self.actionDirectory_Setup.setObjectName("actionDirectory_Setup")
        self.use_local_training = QtGui.QAction(parent=MainWindow)
        self.use_local_training.setCheckable(True)
        self.use_local_training.setChecked(True)
        self.use_local_training.setObjectName("use_local_training")
        self.action_2 = QtGui.QAction(parent=MainWindow)
        self.action_2.setObjectName("action_2")
        self.menuFile.addAction(self.actionLoad_Preset)
        self.menuFile.addAction(self.actionSave_Preset)
        self.menuFile.addAction(self.actionSaveAs_Preset)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSettings)
        self.menuHelp.addAction(self.actionGithub)
        self.menuTools.addAction(self.actionDirectory_Setup)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.modeTabs.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CryoViT Segmentation"))
        self.processButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Generates the CLI command to run pre-processing based on the inputted settings. This command is copied to the clipboard, and also printed in the console below.</p></body></html>"))
        self.processButton.setText(_translate("MainWindow", "Generate Command"))
        self.modeTabs.setTabText(self.modeTabs.indexOf(self.processTab), _translate("MainWindow", "1. Pre-processing"))
        self.projectDirectoryLabel.setToolTip(_translate("MainWindow", "<html><head/><body><p>The location of the project root directory. This has the following file structure layout:</p><p>&gt; Project Root</p><p>    &gt; Tomograms</p><p>        &gt; Sample 1</p><p>            &gt; *.hdf</p><p>        &gt; ...</p><p>    &gt; csvs</p><p>        &gt; ...</p><p>    &gt; slices</p><p>        &gt; ...</p><p>    &gt; Annotations (optional)</p><p>        &gt; ...</p></body></html>"))
        self.projectDirectoryLabel.setText(_translate("MainWindow", "Project Root Directory:"))
        self.projectDirectory.setPlaceholderText(_translate("MainWindow", "/path/to/the/project/root/directory"))
        self.annotGroup.setTitle(_translate("MainWindow", "Annotations"))
        self.selectLabel.setToolTip(_translate("MainWindow", "<html><head/><body><p>Records current annotation progress for specific samples and files, and allows users to select files to annotate further.</p></body></html>"))
        self.selectLabel.setText(_translate("MainWindow", "File Selection Progress:"))
        self.selectAllButton.setText(_translate("MainWindow", "Select All"))
        self.deselectAllButton.setText(_translate("MainWindow", "Deselect All"))
        self.resetDefaultButton.setText(_translate("MainWindow", "Reset to Default"))
        self.chimeraButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Launches <span style=\" font-weight:700;\">ChimeraX</span> to select slices to annotate.</p><p>The path to <span style=\" font-weight:700;\">ChimeraX.exe</span> must be specified in File &gt; Settings.</p></body></html>"))
        self.chimeraButton.setText(_translate("MainWindow", "Launch ChimeraX"))
        self.slicesButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Extracts previously-marked slices to the slice directory for further segmentation in <span style=\" font-weight:700;\">Hasty.ai</span>. These are saved in <span style=\" font-weight:700;\">project_root_dir/slices</span>.</p></body></html>"))
        self.slicesButton.setText(_translate("MainWindow", "Extract Slices"))
        self.featuresLabel.setToolTip(_translate("MainWindow", "<html><head/><body><p>Labels for the annotated features. These can either be listed manually in descending order (i.e., decreasing pixel value in the mask image), or imported using the <span style=\" font-weight:700;\">.json</span> produced by exporting from <span style=\" font-weight:700;\">Hasty.ai</span>.</p></body></html>"))
        self.featuresLabel.setText(_translate("MainWindow", "Labeled Features:"))
        self.featuresDisplay.setToolTip(_translate("MainWindow", "<html><head/><body><p>A comma-separated list of segmentation labels, in order of decreasing pixel value in the annotation .png.</p><p>The list can either be edited manually, or new features can be added with the + button on the right.</p></body></html>"))
        self.featuresDisplay.setPlaceholderText(_translate("MainWindow", "list features labeled in order of decreasing annotation value"))
        self.featuresButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Add a feature to label. Must be already present in the annotations.</p></body></html>"))
        self.annotButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Read finished annotations and add them to tomograms in <span style=\" font-weight:700;\">project_root_dir/Tomograms</span>.</p></body></html>"))
        self.annotButton.setText(_translate("MainWindow", "Add Annotations"))
        self.splitsGroup.setTitle(_translate("MainWindow", "Training Splits"))
        self.splitsButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Add annotations to the existing tomogram files and generate training splits for <span style=\" font-weight:700;\">cross-validation.</span></p><p>These are stored in a <span style=\" font-weight:700;\">splits.csv</span> file in the <span style=\" font-weight:700;\">.CSV Directory</span>.</p></body></html>"))
        self.splitsButton.setText(_translate("MainWindow", "Generate Training Splits"))
        self.modeTabs.setTabText(self.modeTabs.indexOf(self.annotTab), _translate("MainWindow", "2. Annotation"))
        self.trainButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Generates the CLI command to run training based on the inputted settings. This command is copied to the clipboard, and also printed in the console below.</p></body></html>"))
        self.trainButton.setText(_translate("MainWindow", "Generate Command"))
        self.modeTabs.setTabText(self.modeTabs.indexOf(self.trainTab), _translate("MainWindow", "3. Training"))
        self.evalButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Generates the CLI command to run evaluation based on the inputted settings. This command is copied to the clipboard, and also printed in the console below.</p></body></html>"))
        self.evalButton.setText(_translate("MainWindow", "Generate Command"))
        self.modeTabs.setTabText(self.modeTabs.indexOf(self.evalTab), _translate("MainWindow", "4. Evaluation"))
        self.segmentButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Generates the CLI command to run segmentation based on the inputted settings. This command is copied to the clipboard, and also printed in the console below.</p></body></html>"))
        self.segmentButton.setText(_translate("MainWindow", "Generate Command"))
        self.modeTabs.setTabText(self.modeTabs.indexOf(self.segmentTab), _translate("MainWindow", "5. Segmentation"))
        self.consoleBox.setTitle(_translate("MainWindow", "Console"))
        self.consoleText.setPlaceholderText(_translate("MainWindow", "> Python console outputs here"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.actionSettings.setText(_translate("MainWindow", "Settings"))
        self.actionGithub.setText(_translate("MainWindow", "Github"))
        self.actionSave_Preset.setText(_translate("MainWindow", "Save"))
        self.actionSave_Preset.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actiondefault.setText(_translate("MainWindow", "default"))
        self.action.setText(_translate("MainWindow", "remove preset"))
        self.actionSaveAs_Preset.setText(_translate("MainWindow", "Save As"))
        self.actionSaveAs_Preset.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionLoad_Preset.setText(_translate("MainWindow", "Load"))
        self.actionLoad_Preset.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionDirectory_Setup.setText(_translate("MainWindow", "Format Downloaded Data"))
        self.actionDirectory_Setup.setToolTip(_translate("MainWindow", "<html><head/><body><p>Format downloaded tomogram data into a standard directory layout for later processing. A <span style=\" font-weight:700;\">sample name</span> will be asked for to identify the dataset.</p><p>Optionally, the downloaded data can be deleted after being copied to the new directory.</p></body></html>"))
        self.use_local_training.setText(_translate("MainWindow", "Run Locally"))
        self.action_2.setText(_translate("MainWindow", "Generate New Training Splits"))
